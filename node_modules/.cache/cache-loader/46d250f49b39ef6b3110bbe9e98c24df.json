{"remainingRequest":"/Users/anubz/Documents/Ativadores/ativador fetch carrosell modal - cópia 6/node_modules/babel-loader/lib/index.js!/Users/anubz/Documents/Ativadores/ativador fetch carrosell modal - cópia 6/node_modules/vue-loader/lib/selector.js?type=script&index=0!/Users/anubz/Documents/Ativadores/ativador fetch carrosell modal - cópia 6/src/components/comps/Login.vue","dependencies":[{"path":"/Users/anubz/Documents/Ativadores/ativador fetch carrosell modal - cópia 6/src/components/comps/Login.vue","mtime":1523981498485},{"path":"/Users/anubz/Documents/Ativadores/ativador fetch carrosell modal - cópia 6/package.json","mtime":1525457060655},{"path":"/Users/anubz/Documents/Ativadores/ativador fetch carrosell modal - cópia 6/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/anubz/Documents/Ativadores/ativador fetch carrosell modal - cópia 6/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Users/anubz/Documents/Ativadores/ativador fetch carrosell modal - cópia 6/node_modules/vue-loader/lib/selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Spinner from '@/components/comps/Spinner';\nimport { swiper, swiperSlide } from 'vue-awesome-swiper';\nimport Swiper from 'swiper';\nexport default {\n  name: 'login',\n  components: {\n    Spinner: Spinner,\n    swiper: swiper,\n    swiperSlide: swiperSlide\n  },\n  data: function data() {\n    return {\n      credentials: {\n        username: '',\n        password: ''\n      },\n      loggingIn: false,\n      error: ''\n    };\n  },\n  methods: {\n    submit: function submit() {\n      this.loggingIn = true;\n      var credentials = {\n        username: this.credentials.username,\n        password: this.credentials.password\n      };\n      console.log(credentials);\n      UsrN = this.credentials.username;\n      console.log(UsrN);\n      var mySwiper = new Swiper('.swiper-container', {\n        // ...\n        on: {\n          init: function init() {\n            console.log('swiper initialized');\n          }\n        }\n      });\n      mySwiper.slideTo(1); // Auth.login() returns a promise. A redirect will happen on success.\n      // For errors, use .then() to capture the response to output\n      // error_description (if exists) as shown below:\n\n      /*  this.$auth.login(credentials, 'dashboard').then((response) => {\n          this.loggingIn = false\n            \n          this.error = utils.getError(response)\n        });*/\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AAEA,AACA,SACA,QACA,mBACA;;AACA;QAEA;;;;AAEA;;wBACA;;;kBAGA;kBACA,AACA;AAHA;iBAIA;aACA,AACA;AAPA;AAUA;;;uBAGA;;mCAEA;mCACA,AACA;AAHA;kBAIA;8BACA;kBACA;;AAEA;;gCAEA;wBACA;AACA,AACA,AACA;AALA;AAFA;uBASA,GAlBA,CAmBA;AACA;AACA;;AACA,AAEA,AACA,AAEA;;;;;AACA,AACA;AA9BA;AAhBA","file":"Login.vue","sourceRoot":"src/components/comps","sourcesContent":["<template>\n  <div class=\"ev-login col-sm-4 offset-sm-4\">\n   <!-- <spinner v-show=\"loggingIn\" message=\"Logging in...\"></spinner>-->\n    <img id=\"imgSid\" src=\"@/assets/sid.png\" width=\"200px\" height=\"auto\"/> \n    <div class=\"alert alert-danger\" v-if=\"error\">\n      <p>{{ error }}</p>\n    </div>\n    <div class=\"form-group \">\n      <input \n        type=\"text\"\n        data-id=\"login.username\" \n        class=\"form-control js-login__username w33\"\n        placeholder=\"Enter your username\"\n        v-model=\"credentials.username\"\n      >\n    </div>\n    <div class=\"form-group\">\n      <input\n        type=\"password\"\n        class=\"form-control js-login__password w33 \"\n        placeholder=\"Enter your password\"\n        v-model=\"credentials.password\"\n      >\n    </div>\n    <button \n      data-id=\"login.submit\"\n      class=\"btn btn-primary solid black js-login__submit\" \n      @click=\"submit()\"\n    >\n      Entrar&nbsp; <i class=\"fa fa-arrow-circle-o-right\"></i>\n    </button>\n    <br><br><br>\n    <a href=\"#\">Esqueci minhas credenciais</a><br>\n    Don’t have an account? &nbsp;<a href=\"#\">Sign up here.</a>\n\n  </div>\n</template>\n\n<script>\nimport Spinner from '@/components/comps/Spinner'\n  \nimport {\n        swiper,\n        swiperSlide\n    } from 'vue-awesome-swiper'\n    import Swiper from 'swiper'\nexport default {\n  name: 'login',\n  components: { Spinner, swiper, swiperSlide },\n\n  data () {\n    return {\n      credentials: {\n        username: '',\n        password: ''\n      },\n      loggingIn: false,\n      error: ''\n    }\n  },\n      \n   \n  methods: {\n    submit () {\n      this.loggingIn = true\n      const credentials = {\n        username: this.credentials.username,\n        password: this.credentials.password\n      }\n      console.log(credentials);\n        UsrN = this.credentials.username;\n        console.log(UsrN);\n     var mySwiper = new Swiper('.swiper-container', {\n  // ...\n  on: {\n    init: function () {\n      console.log('swiper initialized');\n    },\n  },\n});\n        mySwiper.slideTo(1);\n\n      // Auth.login() returns a promise. A redirect will happen on success.\n      // For errors, use .then() to capture the response to output\n      // error_description (if exists) as shown below:\n    /*  this.$auth.login(credentials, 'dashboard').then((response) => {\n        this.loggingIn = false\n          \n        this.error = utils.getError(response)\n      });*/\n        \n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    \n    #imgSid{\n        \n        position: relative;\n        top: -100px;\n        margin-left: 1.3em;\n    }\n    \n    .form-group{\n        position: relative;\n     top: -50px;\n        \n        margin: 1em;\n    }\n    \n.ev-login {\n  margin-top: 100px;\n}\nbutton {\n    color: aliceblue;\n    width: 200px;\nbackground-color: #000;\n\tfont-size: 1em;\n\tpadding: 1em 2em;\n\tborder: none !important;\n\tborder-radius: 3px;\n\tbox-shadow: none;\n}\n</style>\n"]}]}