{"remainingRequest":"/Users/anubz/Documents/Ativadores/ativador fetch carrosell modal - cópia 6/node_modules/babel-loader/lib/index.js!/Users/anubz/Documents/Ativadores/ativador fetch carrosell modal - cópia 6/node_modules/vue-loader/lib/selector.js?type=script&index=0!/Users/anubz/Documents/Ativadores/ativador fetch carrosell modal - cópia 6/src/components/comps/Foto.vue","dependencies":[{"path":"/Users/anubz/Documents/Ativadores/ativador fetch carrosell modal - cópia 6/src/components/comps/Foto.vue","mtime":1525287498078},{"path":"/Users/anubz/Documents/Ativadores/ativador fetch carrosell modal - cópia 6/package.json","mtime":1525457060655},{"path":"/Users/anubz/Documents/Ativadores/ativador fetch carrosell modal - cópia 6/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/anubz/Documents/Ativadores/ativador fetch carrosell modal - cópia 6/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Users/anubz/Documents/Ativadores/ativador fetch carrosell modal - cópia 6/node_modules/vue-loader/lib/selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar firebase = require('firebase');\n\nvar $ = require('jquery');\n\nwindow.post = {};\nimport Swiper from 'swiper';\nexport default {\n  name: 'foto',\n  data: function data() {\n    return {\n      msg: 'Imagens',\n      image: '',\n      imageB: '',\n      urr: ''\n    };\n  },\n  methods: {\n    onFileChange: function onFileChange(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      if (!files.length) return;\n      this.createImage(files[0]); // this.createImageTest(files[0]);\n\n      var file = e.target.files[0]; //var storageRef = firebase.storage().ref(file.name);\n\n      console.log('<filename =============>', file.size);\n      var metadata = {\n        contentType: 'image/jpeg'\n      };\n    },\n    createImage: function createImage(file) {\n      var _this = this;\n\n      var dataT = new Date();\n      var image = new Image();\n      var reader = new FileReader();\n      var vm = this;\n\n      reader.onload = function (e) {\n        vm.image = e.target.result;\n        $(\"#lastIMG\").append('<img  src=\"' + vm.image + '\" width=\"100px\" height=\"auto\"/>');\n        var ind = new Date().toISOString();\n        post = {\n          id: ind,\n          image: vm.image,\n          lele: vm.image.length,\n          tag_num: TagN,\n          geolocation: GeoL,\n          cod_Tree: CodTree,\n          data: dataT.getDate() + '/' + dataT.getMonth() + 1 + '/' + dataT.getFullYear(),\n          hora: dataT.getHours() + ':' + dataT.getMinutes() + ':' + dataT.getSeconds(),\n          user: UsrN\n        };\n        console.log('variavel>', post);\n        $(\"#imgLoad\").remove();\n\n        _this.ResizeImage(file);\n      };\n\n      reader.readAsDataURL(file);\n      console.log('readerfile > ', reader);\n    },\n    createImageTest: function createImageTest(file) {\n      if (window.File && window.FileReader && window.FileList\n      /*&& window.Blob*/\n      ) {\n          var dataT = new Date();\n          var image = new Image();\n          var reader = new FileReader();\n          var vm = this;\n\n          reader.onload = function (e) {\n            vm.image = e.target.result;\n            $(\"#lastIMG\").append('<img  src=\"' + vm.image + '\" width=\"100px\" height=\"auto\"/>');\n            var ind = new Date().toISOString();\n            var img = document.createElement(\"img\");\n            img.src = vm.image; //e.target.result;\n\n            var canvas = document.createElement(\"canvas\");\n            var ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            var MAX_WIDTH = 1024;\n            var MAX_HEIGHT = 768;\n            var width = img.width;\n            var height = img.height;\n\n            if (width > height) {\n              if (width > MAX_WIDTH) {\n                height *= MAX_WIDTH / width;\n                width = MAX_WIDTH;\n              }\n            } else {\n              if (height > MAX_HEIGHT) {\n                width *= MAX_HEIGHT / height;\n                height = MAX_HEIGHT;\n              }\n            }\n\n            canvas.width = width;\n            canvas.height = height; //var ctx = canvas.getContext(\"2d\");\n\n            ctx.drawImage(img, 0, 0, width, height);\n            console.log('<filename ctx -------- >', ctx);\n            var dataurl = canvas.toDataURL(file.type);\n            document.getElementById('lastIMG').src = dataurl;\n            console.log('readerfile new> ', dataurl);\n            post = {\n              id: ind,\n              image: dataurl,\n              tag_num: TagN,\n              geolocation: GeoL,\n              cod_Tree: CodTree,\n              data: dataT.getDate() + '/' + dataT.getMonth() + '/' + dataT.getFullYear(),\n              hora: dataT.getHours() + ':' + dataT.getMinutes() + ':' + dataT.getSeconds(),\n              user: UsrN\n            };\n            console.log('variavel>', post);\n            $(\"#imgLoad\").remove();\n          };\n\n          reader.readAsDataURL(file);\n          console.log('readerfile > ', reader);\n        }\n\n      ;\n    },\n    ResizeImage: function ResizeImage(file) {\n      if (window.File && window.FileReader) {\n        // var filesToUploads = document.getElementById('inputF').files;\n        //var file = filesToUploads[0];\n        //var file = post.image;\n        if (file) {\n          var reader = new FileReader(); // Set the image once loaded into file reader\n\n          reader.onload = function (e) {\n            var img = document.createElement(\"img\");\n            img.id = 'result';\n            img.src = e.target.result;\n            var canvas = document.createElement(\"canvas\");\n            var ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            var MAX_WIDTH = 1024;\n            var MAX_HEIGHT = 768;\n            var width = img.width;\n            var height = img.height;\n\n            if (width > height) {\n              if (width > MAX_WIDTH) {\n                height *= MAX_WIDTH / width;\n                width = MAX_WIDTH;\n              }\n            } else {\n              if (height > MAX_HEIGHT) {\n                width *= MAX_HEIGHT / height;\n                height = MAX_HEIGHT;\n              }\n            }\n\n            canvas.width = width;\n            canvas.height = height; // var ctx = canvas.getContext(\"2d\");\n\n            ctx.drawImage(img, 0, 0, width, height);\n            var dataurl = canvas.toDataURL(file.type); //document.getElementById('lastIMG').src = dataurl;\n\n            post.image = dataurl;\n            post.lele = dataurl.length;\n            console.log('readerfile new> ', post);\n          };\n\n          reader.readAsDataURL(file);\n        }\n      } else {\n        alert('The File APIs are not fully supported in this browser.');\n      }\n    },\n    removeImage: function removeImage(e) {\n      $(\"#lastIMG\").remove();\n      $(\"#imgLoad\").remove();\n    },\n    avancar: function avancar() {\n      // writeData('posts', post);\n      // writeData('sync-posts', post);\n      // firebase.database().ref('posts/'+(post.tag_num)).set(post);   \n      // firebase.database().ref('posts').push(post);\n      if ('serviceWorker' in navigator && 'SyncManager' in window) {\n        navigator.serviceWorker.ready.then(function (sw) {\n          writeData('sync-posts', post).then(function () {\n            return sw.sync.register('sync-new-posts');\n          }).then(function () {\n            var data = {\n              message: 'Your Post was saved for syncing!'\n            };\n            console.log(data);\n          }).catch(function (err) {\n            console.log(err);\n          });\n        });\n      }\n\n      ;\n\n      if ('indexedDB' in window) {\n        readAllData('sync-posts').then(function (data) {\n          console.log('From cache', data);\n        });\n      }\n\n      ; //  fetch('https://192.168.0.8/lambanca', {\n      //          method: 'POST',\n      //          headers: {\n      //              // 'dataType': 'json',\n      //              'Access-Control-Allow-Origin': '*/*',\n      //              'Content-Type': 'application/json',\n      //              'Accept': 'application/json'\n      //          },\n      //          dataType: 'json',\n      //          mode: 'cors',\n      //          body: JSON.stringify([post])\n      //      }).then(function(response) {\n      //          console.log(response);\n      //          return response.json();\n      //      }).then(function (data) {\n      //      \n      //      console.log(data);\n      //  })\n      //      .catch(function(err) {\n      //          console.log('******');\n      //      }); \n      //     \n      //    fetch('https://ativador-55a4a.firebaseio.com/posts/alfa.json', {\n      //                method: 'POST',\n      //                headers: {\n      //                    // 'dataType': 'json',\n      //                    'Access-Control-Allow-Origin': '*/*',\n      //                    'Content-Type': 'application/json',\n      //                    'Accept': 'application/json'\n      //                },\n      //                dataType: 'json',\n      //                mode: 'cors',\n      //                body: JSON.stringify([post])\n      //            }).then(function(response) {\n      //                console.log(response);\n      //                return response.json();\n      //            }).then(function (data) {\n      //            \n      //            console.log(data);\n      //        })\n      //            .catch(function(err) {\n      //                console.log('******');\n      //            });\n      //   firebase.database().ref('posts/'+(post.tag_num)).set(post);\n      // firebase.database().ref('posts').push(post);\n\n      var mySwiper = new Swiper('.swiper-container', {});\n      mySwiper.slideTo(1);\n    }\n  }\n};\nreadAllData('posts').then(function (data) {\n  $(\"#imgf\").text('');\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var dt = _step.value;\n      //$(\"#lastIMG\").append('<img  src=\"' + dt.image + '\" width=\"100px\" height=\"auto\"/>');\n      $(\"#imgf\").html(\"<p> \" + dt.data + '----' + dt.id + '-->' + dt.hora + \"</p><br> \");\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n});",{"version":3,"sources":["Foto.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;;AACA;;AACA;AACA;AACA;QAEA;wBACA;;WAEA;aACA;cACA;WACA,AACA;AALA;AAMA;;;mDAGA;iBACA,QACA;6BACA,IAJA,CAMA;;gCACA,IACA;;mDACA;;qBAEA,AACA;AAFA;AAGA;;AACA;;sBACA;sBACA;uBACA;eACA;;mCACA;4BACA;wDACA;6BACA;;cAEA;oBACA;yBACA;mBACA;uBACA;oBACA;2EACA;0EACA;gBACA,AACA;AAVA;iCAWA;sBACA;;0BACA;AACA;;2BACA;mCACA;AAEA;oDACA;;;QACA;0BACA;0BACA;2BACA;mBACA;;;gCAEA;4DACA;iCACA;6CACA;+BAJA,CAMA;;gDACA;wCACA;kCACA;4BACA;6BACA;4BACA;6BACA;;gCACA;qCACA;sCACA;wBACA;AACA;mBACA;uCACA;sCACA;yBACA;AACA;AACA;;2BACA;4BACA,QAEA;;4CACA;oDACA;gDACA;qDAEA;4CACA;;kBAEA;qBACA;uBACA;2BACA;wBACA;2EACA;8EACA;oBACA,AACA;AATA;qCAUA;0BACA;AACA;;+BACA;uCAEA;AACA;;;AAEA;4CACA;4CACA;AACA;AACA;AACA;kBACA;2BACA,cACA;;;6CAEA;qBACA;+BACA;gDACA;wCACA;kCACA;4BACA;6BACA;4BACA;6BACA;;gCACA;qCACA;sCACA;wBACA;AACA;mBACA;uCACA;sCACA;yBACA;AACA;AACA;;2BACA;4BACA,OAvBA,CAwBA;;4CACA;gDACA,OACA;;yBACA;gCACA;4CACA;AACA;;+BACA;AACA;aACA;cACA;AACA;AACA;yCACA;oBACA;oBACA;AACA;;AAEA;AACA;AACA;AACA;mEACA;gCACA,yBACA;kCACA,uBACA;oCACA;AACA,8BACA;;uBAEA,AACA;AAFA;wBAGA;AACA,kCACA;wBACA;AACA;AACA;AACA;;;;iCACA;oBACA,mCACA;oCACA;AACA;AACA;;OA5BA,CA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;qDACA,AACA;uBACA;AACA,AACA;AAvOA;AAVA;AAkPA,YACA;kBAEA;AADA;;;;;;AAEA;AACA;4EACA;AACA","file":"Foto.vue","sourceRoot":"src/components/comps","sourcesContent":["<template>\n  <div class=\"foto\">\n    <h1>{{ msg }}</h1>\n      <p>Registre uma imagens para comprovar a identificação da árvore.</p>\n      <div v-if=\"!image\">\n            <div id=\"lastIMG\"> \n              <img id=\"imgL\" src=\"@/assets/icoo.png\" width=\"100px\" height=\"auto\"/>    \n    </div>\n    <input id=\"inputF\" type=\"file\" accept=\"video/*;capture=camcorder\" @change=\"onFileChange\">\n  </div>\n  <div v-else>\n          <div id=\"lastIMG\"> \n    </div>\n    <img id=\"imgLoad\" :src=\"image\" width=\"100px\" height=\"100px\"/>\n      <input id=\"inputF\" type=\"file\" accept=\"video/*;capture=camcorder\" @change=\"onFileChange\">\n   <button @click=\"removeImage\">Remove image</button>\n      <br>\n       <button class=\"btavancar\" @click=\"avancar\">Salvar</button>\n  </div>\n      <!--<input type=\"button\" value=\"Resize Image\"  @click=\"ResizeImage\"/>-->\n    <img src=\"\" id=\"output\">\n  </div>\n</template>\n<script>\n    var firebase = require('firebase');\n    var $ = require('jquery')\n    window.post = {}\n    import Swiper from 'swiper'\n    export default {\n        name: 'foto',\n        data() {\n            return {\n                msg: 'Imagens',\n                image: '',\n                imageB: '',\n                urr: ''\n            }\n        },\n        methods: {\n            onFileChange(e) {\n                var files = e.target.files || e.dataTransfer.files;\n                if (!files.length)\n                    return;\n               this.createImage(files[0]);\n               // this.createImageTest(files[0]);\n            \n                var file = e.target.files[0];\n                //var storageRef = firebase.storage().ref(file.name);\n                console.log('<filename =============>', file.size);\n                var metadata = {\n                    contentType: 'image/jpeg'\n                };\n            },\n            createImage(file) {\n                var dataT = new Date();\n                var image = new Image();\n                var reader = new FileReader();\n                var vm = this;\n                reader.onload = (e) => {\n                    vm.image = e.target.result;\n                    $(\"#lastIMG\").append('<img  src=\"' + vm.image + '\" width=\"100px\" height=\"auto\"/>');\n                    var ind = new Date().toISOString();\n                    post = {\n                        id: ind,\n                        image: vm.image,\n                        lele: vm.image.length,\n                        tag_num: TagN,\n                        geolocation: GeoL,\n                        cod_Tree: CodTree,\n                        data: dataT.getDate() + '/' + dataT.getMonth() + 1 + '/' + dataT.getFullYear(),\n                        hora: dataT.getHours() + ':' + dataT.getMinutes() + ':' + dataT.getSeconds(),\n                        user: UsrN\n                    };\n                    console.log('variavel>', post);\n                    $(\"#imgLoad\").remove();\n              this.ResizeImage(file);\n                };\n                reader.readAsDataURL(file);\n                console.log('readerfile > ', reader);\n            },\n            \n            createImageTest(file) {\n                 if (window.File && window.FileReader && window.FileList /*&& window.Blob*/) {\n                var dataT = new Date();\n                var image = new Image();\n                var reader = new FileReader();\n                var vm = this;\n                reader.onload = (e) => {\n                    vm.image = e.target.result;\n                    $(\"#lastIMG\").append('<img  src=\"' + vm.image + '\" width=\"100px\" height=\"auto\"/>');\n                    var ind = new Date().toISOString();\n                     var img = document.createElement(\"img\");\n                            img.src =  vm.image;     //e.target.result;\n                    \n                            var canvas = document.createElement(\"canvas\");\n                            var ctx = canvas.getContext(\"2d\");\n                            ctx.drawImage(img, 0, 0);\n                            var MAX_WIDTH = 1024;\n                            var MAX_HEIGHT = 768;\n                            var width = img.width;\n                            var height = img.height;\n                            if (width > height) {\n                                if (width > MAX_WIDTH) {\n                                    height *= MAX_WIDTH / width;\n                                    width = MAX_WIDTH;\n                                }\n                            } else {\n                                if (height > MAX_HEIGHT) {\n                                    width *= MAX_HEIGHT / height;\n                                    height = MAX_HEIGHT;\n                                }\n                            }\n                            canvas.width = width;\n                            canvas.height = height;\n                            //var ctx = canvas.getContext(\"2d\");\n                    \n                            ctx.drawImage(img, 0, 0, width, height);\n                     console.log('<filename ctx -------- >', ctx);\n                           var dataurl = canvas.toDataURL(file.type);\n                            document.getElementById('lastIMG').src = dataurl;\n                           \n                        console.log('readerfile new> ', dataurl);\n                    post = {\n                        id: ind,\n                        image: dataurl,\n                        tag_num: TagN,\n                        geolocation: GeoL,\n                        cod_Tree: CodTree,\n                        data: dataT.getDate() + '/' + dataT.getMonth() + '/' + dataT.getFullYear(),\n                        hora: dataT.getHours() + ':' + dataT.getMinutes() + ':' + dataT.getSeconds(),\n                        user: UsrN\n                    };\n                    console.log('variavel>', post);\n                    $(\"#imgLoad\").remove();\n                };\n                reader.readAsDataURL(file);\n                console.log('readerfile > ', reader);\n             \n            };\n            },\n            \n            ResizeImage(file) {\n                if (window.File && window.FileReader ) {\n                   // var filesToUploads = document.getElementById('inputF').files;\n                    //var file = filesToUploads[0];\n                    //var file = post.image;\n                    if (file) {\n                        var reader = new FileReader();\n                        // Set the image once loaded into file reader\n                        reader.onload = function(e) {\n                            var img = document.createElement(\"img\");\n                            img.id= 'result';\n                            img.src = e.target.result;\n                            var canvas = document.createElement(\"canvas\");\n                            var ctx = canvas.getContext(\"2d\");\n                            ctx.drawImage(img, 0, 0);\n                            var MAX_WIDTH = 1024;\n                            var MAX_HEIGHT = 768;\n                            var width = img.width;\n                            var height = img.height;\n                            if (width > height) {\n                                if (width > MAX_WIDTH) {\n                                    height *= MAX_WIDTH / width;\n                                    width = MAX_WIDTH;\n                                }\n                            } else {\n                                if (height > MAX_HEIGHT) {\n                                    width *= MAX_HEIGHT / height;\n                                    height = MAX_HEIGHT;\n                                }\n                            }\n                            canvas.width = width;\n                            canvas.height = height;\n                           // var ctx = canvas.getContext(\"2d\");\n                            ctx.drawImage(img, 0, 0, width, height);\n                           var dataurl = canvas.toDataURL(file.type);\n                            //document.getElementById('lastIMG').src = dataurl;\n                            post.image = dataurl;\n                            post.lele = dataurl.length;\n                        console.log('readerfile new> ', post);\n                        }\n                        reader.readAsDataURL(file);\n                    }\n                } else {\n                    alert('The File APIs are not fully supported in this browser.');\n                }\n            },\n            removeImage: function(e) {\n                $(\"#lastIMG\").remove();\n                $(\"#imgLoad\").remove();\n            },\n            avancar() {\n                // writeData('posts', post);\n                // writeData('sync-posts', post);\n                // firebase.database().ref('posts/'+(post.tag_num)).set(post);   \n                // firebase.database().ref('posts').push(post);\n                if ('serviceWorker' in navigator && 'SyncManager' in window) {\n                    navigator.serviceWorker.ready\n                        .then(function(sw) {\n                            writeData('sync-posts', post)\n                                .then(function() {\n                                    return sw.sync.register('sync-new-posts');\n                                })\n                                .then(function() {\n                                    var data = {\n                                        message: 'Your Post was saved for syncing!'\n                                    };\n                                    console.log(data);\n                                })\n                                .catch(function(err) {\n                                    console.log(err);\n                                });\n                        })\n                };\n                if ('indexedDB' in window) {\n                    readAllData('sync-posts')\n                        .then(function(data) {\n                            console.log('From cache', data);\n                        });\n                };\n                //  fetch('https://192.168.0.8/lambanca', {\n                //          method: 'POST',\n                //          headers: {\n                //              // 'dataType': 'json',\n                //              'Access-Control-Allow-Origin': '*/*',\n                //              'Content-Type': 'application/json',\n                //              'Accept': 'application/json'\n                //          },\n                //          dataType: 'json',\n                //          mode: 'cors',\n                //          body: JSON.stringify([post])\n                //      }).then(function(response) {\n                //          console.log(response);\n                //          return response.json();\n                //      }).then(function (data) {\n                //      \n                //      console.log(data);\n                //  })\n                //      .catch(function(err) {\n                //          console.log('******');\n                //      }); \n                //     \n                //    fetch('https://ativador-55a4a.firebaseio.com/posts/alfa.json', {\n                //                method: 'POST',\n                //                headers: {\n                //                    // 'dataType': 'json',\n                //                    'Access-Control-Allow-Origin': '*/*',\n                //                    'Content-Type': 'application/json',\n                //                    'Accept': 'application/json'\n                //                },\n                //                dataType: 'json',\n                //                mode: 'cors',\n                //                body: JSON.stringify([post])\n                //            }).then(function(response) {\n                //                console.log(response);\n                //                return response.json();\n                //            }).then(function (data) {\n                //            \n                //            console.log(data);\n                //        })\n                //            .catch(function(err) {\n                //                console.log('******');\n                //            });\n                //   firebase.database().ref('posts/'+(post.tag_num)).set(post);\n                // firebase.database().ref('posts').push(post);\n                var mySwiper = new Swiper('.swiper-container', {\n                });\n                mySwiper.slideTo(1);\n            }\n        }\n    };\n    readAllData('posts')\n        .then(function(data) {\n            $(\"#imgf\").text('');\n            for (var dt of data) {\n                //$(\"#lastIMG\").append('<img  src=\"' + dt.image + '\" width=\"100px\" height=\"auto\"/>');\n                $(\"#imgf\").html(\"<p> \" + dt.data + '----' + dt.id + '-->' + dt.hora + \"</p><br> \");\n            }\n        })\n</script>\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n    h1,\n    h2,\n    p {\n        font-weight: normal;\n        color: black;\n    }\n    button {\n        color: aliceblue;\n        background-color: #000;\n        font-size: 1em;\n        padding: 1em 2em;\n        margin: 1em;\n        border: none !important;\n        border-radius: 5em;\n        box-shadow: none;\n    }\n</style>"]}]}